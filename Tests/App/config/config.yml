imports:
    - { resource: services.yml }
    - { resource: csv.yml }
    - { resource: parameters.yml }
    - { resource: "@SmartboxIntegrationFrameworkBundle/Resources/config/default_configured_consumers.yml" }
    - { resource: "@SmartboxIntegrationFrameworkBundle/Resources/config/default_configured_producers.yml" }


framework:
    secret:          "%secret%"
    validation:      { enable_annotations: true }
    default_locale:  "%locale%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    profiler:
        enabled: true
        collect: false

sensio_framework_extra:
    request:
        converters: true
        auto_convert: false

monolog:
    channels: [tracking]
    handlers:
        syslog:
            type: syslog
            level: error
            formatter: smartcore.monolog.formatter.json
        syslog_tracking:
            type: syslog
            level: debug
            formatter: smartcore.monolog.formatter.json
            channels: [tracking]

smartbox_core:
  fixtures_path: "%kernel.root_dir%/Resources/Fixtures"
  entities_namespaces:
    - 'Smartbox\Integration\CamelConfigBundle\Tests\App\Entity'
  cache_drivers:
      array:
          service: @array_cache_service

smartbox_integration_camel_config:
    flows_directories:
      - "%kernel.root_dir%/Resources/TestFlows"
    frozen_flows_directory: "%kernel.root_dir%/Resources/FrozenFlows"


smartbox_integration_framework:
    defer_events_to_uri: false
    queue_drivers:
        main:
            type: RabbitMQ
            description: RabbitMQ queue driver
            host: "%rabbitmq.hostname%"
            username: "%rabbitmq.username%"
            password: "%rabbitmq.password%"
            format: json
            vhost: '%rabbitmq.vhost%'
            timeout: '%rabbitmq.timeout%'
    default_queue_driver: main
    default_nosql_driver: ~

    nosql_drivers: ~

    message_handlers:
        sync:
            description: Message hanlder to handle messages comming from the API
            retries_max: 5
            failed_uri: queue://main/failed/sync
            retry_uri:  queue://main/retry/sync
            throw_exceptions: true
            defer_new_exchanges: false
            retry_delay: 0
            throttle_delay: 1
            throttle_delay_factor: 1
            throttle_strategy: fixed
            throttle_uri: queue://main/throttle

        async:
            description: Message hanlder to handle messages comming from a queue
            retries_max: 5
            failed_uri: queue://main/failed/async
            retry_uri: original
            throw_exceptions: false
            defer_new_exchanges: true
            retry_delay: 0
            throttle_delay: 1
            throttle_delay_factor: 1
            throttle_strategy: fixed
            throttle_uri: queue://main/throttle

    flows_version: 0

    producers:
        mongo:
            class: Smartbox\Integration\FrameworkBundle\Components\DB\DBConfigurableProducer
            description: Producer to send messages to mongo
            calls:
              - [setConfigurableStepsProvider, [@smartesb.steps_provider.nosql]]
            options: ~

            methods:
                insert:
                    description: Inserts a message in a mongo collection
                    steps:
                        - insertOne:
                            data: eval: msg

doctrine:
    dbal:
        default_connection: default
    orm:
        entity_managers:
            default:
                connection: default